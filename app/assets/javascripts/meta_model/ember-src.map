{"version":3,"sources":["vendor/ember-cli/app-prefix.js","ember-src/adapters/application.js","ember-src/adapters/association.js","ember-src/adapters/meta-model.js","ember-src/adapters/model.js","ember-src/adapters/property.js","ember-src/app.js","ember-src/components/focus-input.js","ember-src/components/model-list-item.js","ember-src/components/model-list.js","ember-src/controllers/application.js","ember-src/controllers/models/hierarchy.js","ember-src/initializers/app-version.js","ember-src/initializers/export-application-global.js","ember-src/meta_model.js","ember-src/models/has-association.js","ember-src/models/model.js","ember-src/models/property.js","ember-src/router.js","ember-src/routes/has-associations/index.js","ember-src/routes/has-associations/new.js","ember-src/routes/models/edit.js","ember-src/routes/models/hierarchy.js","ember-src/serializers/application.js","ember-src/templates/application.js","ember-src/templates/components/has-association-diagram.js","ember-src/templates/components/model-list-item.js","ember-src/templates/components/model-list.js","ember-src/templates/has_associations/index.js","ember-src/templates/has_associations/new.js","ember-src/templates/index.js","ember-src/templates/models/edit.js","ember-src/templates/models/hierarchy.js","ember-src/tests/helpers/resolver.js","ember-src/tests/helpers/resolver.jshint.js","ember-src/tests/helpers/start-app.js","ember-src/tests/helpers/start-app.jshint.js","ember-src/tests/test-helper.js","ember-src/tests/test-helper.jshint.js","ember-src/tests/unit/adapters/application-test.js","ember-src/tests/unit/adapters/association-test.js","ember-src/tests/unit/adapters/meta-model-test.js","ember-src/tests/unit/adapters/model-test.js","ember-src/tests/unit/adapters/property-test.js","ember-src/tests/unit/components/focus-input-test.js","ember-src/tests/unit/components/model-list-item-test.js","ember-src/tests/unit/components/model-list-test.js","ember-src/tests/unit/controllers/application-test.js","ember-src/tests/unit/controllers/models-edit-test.js","ember-src/tests/unit/controllers/models-hierarchy-test.js","ember-src/tests/unit/controllers/models-test.js","ember-src/tests/unit/helpers/mm-path-test.js","ember-src/tests/unit/models/has-association-test.js","ember-src/tests/unit/models/model-test.js","ember-src/tests/unit/models/property-test.js","ember-src/tests/unit/routes/has-association-index-test.js","ember-src/tests/unit/routes/has-associations-new-test.js","ember-src/tests/unit/routes/models-edit-test.js","ember-src/tests/unit/routes/models-hierarchy-test.js","ember-src/tests/unit/serializers/application-test.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('ember-src/adapters/application', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\tvar ApplicationAdapter;\n\n\tApplicationAdapter = DS['default'].ActiveModelAdapter.extend();\n\n\texports['default'] = ApplicationAdapter;\n\n});","define('ember-src/adapters/association', ['exports', 'ember-src/adapters/meta-model'], function (exports, MetaModelAdapter) {\n\n  'use strict';\n\n  var AssociationAdapter;\n\n  AssociationAdapter = MetaModelAdapter['default'].extend({\n    buildURL: function(type, id, record) {\n      var result;\n      result = \"/meta/has_associations\";\n      if (id) {\n        result += \"/\" + id;\n      }\n      return mm_path(result);\n    }\n  });\n\n  exports['default'] = AssociationAdapter;\n\n});","define('ember-src/adapters/meta-model', ['exports', 'ember-src/adapters/application'], function (exports, ApplicationAdapter) {\n\n  'use strict';\n\n  var MetaModelAdapter;\n\n  MetaModelAdapter = DS.RESTAdapter.extend({\n    namespace: mm_path('meta').slice(1)\n  });\n\n  exports['default'] = MetaModelAdapter;\n\n});","define('ember-src/adapters/model', ['exports', 'ember-src/adapters/meta-model'], function (exports, MetaModelAdapter) {\n\n\t'use strict';\n\n\tvar ModelAdapter;\n\n\tModelAdapter = MetaModelAdapter['default'].extend();\n\n\texports['default'] = ModelAdapter;\n\n});","define('ember-src/adapters/property', ['exports', 'ember-src/adapters/meta-model'], function (exports, MetaModelAdapter) {\n\n\t'use strict';\n\n\tvar PropertyAdapter;\n\n\tPropertyAdapter = MetaModelAdapter['default'].extend();\n\n\texports['default'] = PropertyAdapter;\n\n});","define('ember-src/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'ember-src/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  var MetaModelApp;\n\n  window.mm_path = function(path) {\n    var base_path, p;\n    base_path = meta_model_root_path;\n    if (base_path.slice(-1) === '/') {\n      base_path = base_path.slice(0, -1);\n    }\n    p = path;\n    if (p[0] === '/') {\n      p = p.slice(1);\n    }\n    return base_path + '/' + p;\n  };\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  MetaModelApp = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default'],\n    rootElement: \"#ember-application\"\n  });\n\n  loadInitializers['default'](MetaModelApp, config['default'].modulePrefix);\n\n  exports['default'] = MetaModelApp;\n\n});","define('ember-src/components/focus-input', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var FocusInputComponent;\n\n  FocusInputComponent = Ember['default'].TextField.extend({\n    becomeFocused: (function() {\n      return this.$().focus();\n    }).on('didInsertElement')\n  });\n\n  exports['default'] = FocusInputComponent;\n\n});","define('ember-src/components/model-list-item', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var ModelListItemComponent;\n\n  ModelListItemComponent = Ember['default'].Component.extend({\n    action: 'meta_model_clicked',\n    actions: {\n      clicked: function() {\n        return this.sendAction('action', this.get('model'));\n      },\n      goto_metamodel: function(model) {\n        return this.sendAction('action', model);\n      }\n    }\n  });\n\n  exports['default'] = ModelListItemComponent;\n\n});","define('ember-src/components/model-list', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var ModelListComponent;\n\n  ModelListComponent = Ember['default'].Component.extend({\n    action: 'goto_metamodel',\n    actions: {\n      meta_model_clicked: function(model) {\n        return this.sendAction('action', model);\n      }\n    }\n  });\n\n  exports['default'] = ModelListComponent;\n\n});","define('ember-src/controllers/application', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\tvar ApplicationController;\n\n\tApplicationController = Ember['default'].Controller.extend();\n\n\texports['default'] = ApplicationController;\n\n});","define('ember-src/controllers/models/hierarchy', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var ModelsHierarchyController;\n\n  ModelsHierarchyController = Ember['default'].Controller.extend({\n    new_model_name: '',\n    actions: {\n      add_model: function() {\n        return this.store.createRecord('model', {\n          class_name: this.new_model_name\n        }).save().then((function(_this) {\n          return function(record) {\n            console.log({\n              queryParams: {\n                class_name: record.get('class_name')\n              }\n            });\n            return _this.transitionToRoute('models.edit', record.get('class_name'));\n          };\n        })(this));\n      }\n    }\n  });\n\n  exports['default'] = ModelsHierarchyController;\n\n});","define('ember-src/initializers/app-version', ['exports', 'ember-src/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: function initialize(container, application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('ember-src/initializers/export-application-global', ['exports', 'ember', 'ember-src/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('ember-src/meta_model', function () {\n\n  'use strict';\n\n\n  /*\n\n  #= require_tree ./templates\n\n  ready = ->\n    if $('#ember-application').length\n      ## for more details see: http://emberjs.com/guides/application/\n       * window.MetaModelApp = Ember.Application.create(rootElement: '#ember-application')\n\n\n\n\n\n  $(document).ready ready\n  $(document).on 'page:load', ready\n   */\n  var mm_path;\n\n  mm_path = function() {\n    var base_path, p;\n    base_path = meta_model_root_path;\n    if (base_path.slice(-1) === '/') {\n      base_path = base_path.slice(0, -1);\n    }\n    p = path;\n    if (p[0] === '/') {\n      p = p.slice(1);\n    }\n    return base_path + '/' + p;\n  };\n\n});","define('ember-src/models/has-association', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  var HasAssociation;\n\n  HasAssociation = DS['default'].Model.extend({\n    join_type: DS['default'].attr('string'),\n    name: DS['default'].attr('string'),\n    opposite_name: DS['default'].attr('string'),\n    relationship_type: DS['default'].attr('string'),\n    from_model: DS['default'].belongsTo('Model', {\n      async: true\n    }),\n    to_model: DS['default'].belongsTo('Model', {\n      async: true\n    }),\n    source_join_type: (function() {\n      var ref;\n      return (ref = this.get('join_type')) != null ? ref.split('_to_')[0] : void 0;\n    }).property('join_type'),\n    destination_join_type: (function() {\n      var ref;\n      return (ref = this.get('join_type')) != null ? ref.split('_to_')[1] : void 0;\n    }).property('join_type'),\n    source_is_defined: (function() {\n      return this.get('source_join_type') && this.get('from_model');\n    }).property('source_join_type', 'from_model'),\n    destination_is_defined: (function() {\n      return this.get('destination_join_type') && this.get('to_model');\n    }).property('destination_join_type', 'to_model'),\n    models_are_defined: (function() {\n      return this.get('from_model') && this.get('to_model');\n    }).property('from_model', 'to_model'),\n    standardize_name: (function() {\n      return this.set('name', this.standardized_name(this.get('name')));\n    }).observes('name'),\n    standardize_opposite_name: (function() {\n      return this.set('opposite_name', this.standardized_name(this.get('opposite_name')));\n    }).observes('opposite_name'),\n    standardized_name: function(name) {\n      return name.replace(/^[\\s0-9]/, '').replace(/[^a-zA-Z0-9]+/g, '_').toLowerCase();\n    },\n    standardize_relationship_type: (function() {\n      return this.set('relationship_type', this.get('relationship_type').replace(/[^a-zA-Z0-9]+/g, '_'));\n    }).observes('relationship_type')\n  });\n\n  exports['default'] = HasAssociation;\n\n});","define('ember-src/models/model', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  var Model;\n\n  Model = DS['default'].Model.extend({\n    class_name: DS['default'].attr('string'),\n    superclass_model: DS['default'].belongsTo('Model'),\n    properties: DS['default'].hasMany('Property'),\n    id_property: DS['default'].belongsTo('Property'),\n    source_has_associations: DS['default'].hasMany('HasAssociation', {\n      inverse: 'to_model'\n    }),\n    destination_has_associations: DS['default'].hasMany('HasAssociation', {\n      inverse: 'from_model'\n    })\n  });\n\n  exports['default'] = Model;\n\n});","define('ember-src/models/property', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  var Property;\n\n  Property = DS['default'].Model.extend({\n    name: DS['default'].attr('string'),\n    type: DS['default'].attr('string'),\n    model: DS['default'].belongsTo('Model', {\n      inverse: 'properties'\n    })\n  });\n\n  exports['default'] = Property;\n\n});","define('ember-src/router', ['exports', 'ember', 'ember-src/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router, map_fn;\n\n  Router = Ember['default'].Router.extend();\n\n  map_fn = function() {\n    this.route('index', {\n      path: \"/\"\n    });\n    console.log('defined index');\n    this.resource('models', {\n      path: '/models'\n    }, function() {\n      this.route('hierarchy', {\n        path: \"/\"\n      });\n      return this.route('edit', {\n        path: \"/:class_name/edit\"\n      });\n    });\n    return this.resource('has_associations', function() {\n      this.route('index', {\n        path: '/'\n      });\n      return this.route('new', {\n        path: '/new'\n      });\n    });\n  };\n\n  exports['default'] = Router.map(map_fn);;\n\n});","define('ember-src/routes/has-associations/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var HasAssociationsIndexRoute;\n\n  HasAssociationsIndexRoute = Ember['default'].Route.extend({\n    model: function(params) {\n      return this.store.find('has_association');\n    },\n    actions: {\n      \"delete\": function(has_association) {\n        return has_association.destroyRecord();\n      }\n    }\n  });\n\n  exports['default'] = HasAssociationIndexRoute;\n\n});","define('ember-src/routes/has-associations/new', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var HasAssociationsNewRoute;\n\n  HasAssociationsNewRoute = Ember['default'].Route.extend({\n    model: function(params) {\n      return Ember['default'].RSVP.hash({\n        has_association: this.store.createRecord('has_association'),\n        models: this.store.find('model'),\n        join_types: ['one_to_many', 'many_to_one', 'many_to_many']\n      });\n    },\n    actions: {\n      create: function(has_association) {\n        return has_association.save().then((function(_this) {\n          return function(record) {\n            return _this.transitionTo('has_associations.index');\n          };\n        })(this));\n      }\n    }\n  });\n\n  exports['default'] = HasAssociationsNewRoute;\n\n});","define('ember-src/routes/models/edit', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var ModelsEditRoute;\n\n  ModelsEditRoute = Ember['default'].Route.extend({\n    model: function(params) {\n      return Ember['default'].RSVP.hash({\n        model: this.store.find('model', params.class_name),\n        models: this.store.find('model'),\n        property_types: ['String', 'DateTime']\n      });\n    },\n    actions: {\n      add_property: function(model) {\n        var property;\n        property = model.get('properties').createRecord({\n          name: '',\n          type: 'String',\n          model_id: model.id\n        });\n        return property.save();\n      },\n      delete_property: function(property) {\n        return property.destroyRecord();\n      },\n      save: function(model) {\n        model.save();\n        return model.get('properties').forEach(function(property) {\n          if (property.get('isDirty')) {\n            return property.save();\n          }\n        });\n      },\n      \"delete\": function(model) {\n        return model.destroyRecord().then((function(_this) {\n          return function() {\n            return _this.transitionTo('models.hierarchy');\n          };\n        })(this));\n      }\n    }\n  });\n\n  exports['default'] = ModelsEditRoute;\n\n});","define('ember-src/routes/models/hierarchy', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var ModelsHierarchyRoute;\n\n  ModelsHierarchyRoute = Ember['default'].Route.extend({\n    model: function() {\n      return $.getJSON(mm_path('/meta/models/hierarchy.json')).then(function(data) {\n        return data.models;\n      });\n    },\n    actions: {\n      goto_metamodel: function(model) {\n        return this.transitionTo('models.edit', model.class_name);\n      }\n    }\n  });\n\n  exports['default'] = ModelsHierarchyRoute;\n\n});","define('ember-src/serializers/application', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\tvar ApplicationSerializer;\n\n\tApplicationSerializer = DS['default'].ActiveModelSerializer.extend();\n\n\texports['default'] = ApplicationSerializer;\n\n});","define('ember-src/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"container\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('ember-src/templates/components/has-association-diagram', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row has-associations-row\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"relationship\");\n        var el3 = dom.createElement(\"span\");\n        dom.setAttribute(el3,\"class\",\"source-join-type\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"span\");\n        dom.setAttribute(el3,\"class\",\"source-association-name\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\":\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"span\");\n        dom.setAttribute(el3,\"class\",\"destination-join-type\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"span\");\n        dom.setAttribute(el3,\"class\",\"destination-association-name\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"i\");\n        dom.setAttribute(el2,\"class\",\"glyphicon glyphicon-triangle-right\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1]);\n        var morph0 = dom.createMorphAt(element0,0,0);\n        var morph1 = dom.createMorphAt(dom.childAt(element1, [0]),0,0);\n        var morph2 = dom.createMorphAt(dom.childAt(element1, [1]),0,0);\n        var morph3 = dom.createMorphAt(element1,3,3);\n        var morph4 = dom.createMorphAt(dom.childAt(element1, [4]),0,0);\n        var morph5 = dom.createMorphAt(dom.childAt(element1, [5]),0,0);\n        var morph6 = dom.createMorphAt(element0,3,3);\n        var morph7 = dom.createMorphAt(element0,4,4);\n        content(env, morph0, context, \"has_association.from_model.class_name\");\n        content(env, morph1, context, \"has_association.source_join_type\");\n        content(env, morph2, context, \"has_association.name\");\n        content(env, morph3, context, \"has_association.relationship_type\");\n        content(env, morph4, context, \"has_association.destination_join_type\");\n        content(env, morph5, context, \"has_association.opposite_name\");\n        content(env, morph6, context, \"has_association.to_model.class_name\");\n        content(env, morph7, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('ember-src/templates/components/model-list-item', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"a\");\n        dom.setAttribute(el1,\"class\",\"list-group-item\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, content = hooks.content, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element0,0,0);\n        var morph1 = dom.createMorphAt(element0,1,1);\n        var morph2 = dom.createMorphAt(fragment,1,1,contextualElement);\n        dom.insertBoundary(fragment, null);\n        element(env, element0, context, \"action\", [\"clicked\"], {\"on\": \"click\"});\n        content(env, morph0, context, \"model.class_name\");\n        content(env, morph1, context, \"model.level\");\n        inline(env, morph2, context, \"model-list\", [], {\"node\": get(env, context, \"sub_hierarchy\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('ember-src/templates/components/model-list', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"model-list-item\", [], {\"model\": get(env, context, \"child.0\"), \"sub_hierarchy\": get(env, context, \"child.1\")});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        block(env, morph0, context, \"each\", [get(env, context, \"node\")], {\"keyword\": \"child\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('ember-src/templates/has_associations/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"New Association\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createElement(\"a\");\n            dom.setAttribute(el1,\"class\",\"btn btn-danger pull-right\");\n            var el2 = dom.createTextNode(\"DELETE\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, element = hooks.element;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [0]);\n            element(env, element0, context, \"action\", [get(env, context, \"delete\"), get(env, context, \"has_association\")], {\"on\": \"click\"});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"has-association-diagram\", [], {\"has_association\": get(env, context, \"has_association\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"has-association-list\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block, get = hooks.get;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n        block(env, morph0, context, \"link-to\", [\"has_associations.new\"], {\"class\": \"btn btn-primary\"}, child0, null);\n        block(env, morph1, context, \"each\", [get(env, context, \"model\")], {\"keyword\": \"has_association\"}, child1, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('ember-src/templates/has_associations/new', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"help-block\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" has \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"...\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element2 = dom.childAt(fragment, [0]);\n          var morph0 = dom.createMorphAt(element2,0,0);\n          var morph1 = dom.createMorphAt(element2,2,2);\n          content(env, morph0, context, \"model.has_association.from_model.class_name\");\n          content(env, morph1, context, \"model.has_association.source_join_type\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"help-block\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" has \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"...\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [0]);\n          var morph0 = dom.createMorphAt(element1,0,0);\n          var morph1 = dom.createMorphAt(element1,2,2);\n          content(env, morph0, context, \"model.has_association.to_model.class_name\");\n          content(env, morph1, context, \"model.has_association.destination_join_type\");\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"help-block\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" ... \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [0]);\n          var morph0 = dom.createMorphAt(element0,0,0);\n          var morph1 = dom.createMorphAt(element0,2,2);\n          content(env, morph0, context, \"model.has_association.from_model.class_name\");\n          content(env, morph1, context, \"model.has_association.to_model.class_name\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"well well-sm\");\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"Here you can define an association between two models.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"First choose the join type and the \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"strong\");\n        var el4 = dom.createTextNode(\"source and destination\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\".\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"Then give names to the associations.  These should finish the sentence \\\"SOURCE/DESTINATION MODEL has one/many...\\\" (e.g. Person has many \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"strong\");\n        var el4 = dom.createTextNode(\"comments\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" / Comment has one \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"strong\");\n        var el4 = dom.createTextNode(\"person\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\")\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"Lastly give a relationship type.  This should complete the sentence \\\"SOURCE MODEL ... DESTINATION MODEL\\\" (e.g. Person \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"strong\");\n        var el4 = dom.createTextNode(\"wrote_comment\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" Comment)\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"Rules\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"For name, opposite name, and relationship type spaces will be converted to underscores (_)\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"Name and opposite name cannot start with numbers and cannot be upper case\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"form\");\n        dom.setAttribute(el1,\"class\",\"form-horizontal\");\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"form-group\");\n        var el3 = dom.createElement(\"label\");\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-2 control-label\");\n        var el5 = dom.createTextNode(\"Join Type\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-4\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-6\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"form-group\");\n        var el3 = dom.createElement(\"label\");\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-2 control-label\");\n        var el5 = dom.createTextNode(\"Source Model\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-10\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"form-group\");\n        var el3 = dom.createElement(\"label\");\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-2 control-label\");\n        var el5 = dom.createTextNode(\"Destination Model\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-10\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"form-group\");\n        var el3 = dom.createElement(\"label\");\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-2 control-label\");\n        var el5 = dom.createTextNode(\"Name\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-10\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"form-group\");\n        var el3 = dom.createElement(\"label\");\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-2 control-label\");\n        var el5 = dom.createTextNode(\"Opposite Name\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-10\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"form-group\");\n        var el3 = dom.createElement(\"label\");\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-2 control-label\");\n        var el5 = dom.createTextNode(\"Relationship Type\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-10\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"form-group\");\n        var el2 = dom.createElement(\"button\");\n        dom.setAttribute(el2,\"class\",\"btn btn-primary\");\n        var el3 = dom.createTextNode(\"Create Association\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element3 = dom.childAt(fragment, [1]);\n        var element4 = dom.childAt(element3, [0, 0]);\n        var element5 = dom.childAt(element3, [3, 0]);\n        var element6 = dom.childAt(element3, [4, 0]);\n        var element7 = dom.childAt(element3, [5, 0]);\n        var element8 = dom.childAt(fragment, [2, 0]);\n        var morph0 = dom.createMorphAt(dom.childAt(element4, [1]),0,0);\n        var morph1 = dom.createMorphAt(dom.childAt(element4, [2]),0,0);\n        var morph2 = dom.createMorphAt(dom.childAt(element3, [1, 0, 1]),0,0);\n        var morph3 = dom.createMorphAt(dom.childAt(element3, [2, 0, 1]),0,0);\n        var morph4 = dom.createMorphAt(dom.childAt(element5, [0]),1,1);\n        var morph5 = dom.createMorphAt(dom.childAt(element5, [1]),0,0);\n        var morph6 = dom.createMorphAt(dom.childAt(element6, [0]),1,1);\n        var morph7 = dom.createMorphAt(dom.childAt(element6, [1]),0,0);\n        var morph8 = dom.createMorphAt(dom.childAt(element7, [0]),1,1);\n        var morph9 = dom.createMorphAt(dom.childAt(element7, [1]),0,0);\n        inline(env, morph0, context, \"view\", [\"select\"], {\"content\": get(env, context, \"model.join_types\"), \"selectionBinding\": \"model.has_association.join_type\", \"prompt\": \"Please Select\", \"class\": \"form-control\"});\n        inline(env, morph1, context, \"has-association-diagram\", [], {\"has_association\": get(env, context, \"model.has_association\")});\n        inline(env, morph2, context, \"view\", [\"select\"], {\"content\": get(env, context, \"model.models\"), \"optionValuePath\": \"content.id\", \"optionLabelPath\": \"content.class_name\", \"selectionBinding\": \"model.has_association.from_model\", \"prompt\": \"Please Select\", \"class\": \"form-control\"});\n        inline(env, morph3, context, \"view\", [\"select\"], {\"content\": get(env, context, \"model.models\"), \"optionValuePath\": \"content.id\", \"optionLabelPath\": \"content.class_name\", \"selectionBinding\": \"model.has_association.to_model\", \"prompt\": \"Please Select\", \"class\": \"form-control\"});\n        block(env, morph4, context, \"if\", [get(env, context, \"model.has_association.source_is_defined\")], {}, child0, null);\n        inline(env, morph5, context, \"input\", [], {\"valueBinding\": \"model.has_association.name\", \"class\": \"form-control\"});\n        block(env, morph6, context, \"if\", [get(env, context, \"model.has_association.destination_is_defined\")], {}, child1, null);\n        inline(env, morph7, context, \"input\", [], {\"valueBinding\": \"model.has_association.opposite_name\", \"class\": \"form-control\"});\n        block(env, morph8, context, \"if\", [get(env, context, \"model.has_association.models_are_defined\")], {}, child2, null);\n        inline(env, morph9, context, \"input\", [], {\"valueBinding\": \"model.has_association.relationship_type\", \"class\": \"form-control\"});\n        element(env, element8, context, \"action\", [get(env, context, \"create\"), get(env, context, \"model.has_association\")], {\"on\": \"click\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('ember-src/templates/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"ul\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createElement(\"li\");\n        dom.setAttribute(el2,\"class\",\"list-group-item\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        dom.setAttribute(el2,\"class\",\"list-group-item\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(dom.childAt(element0, [0]),0,0);\n        var morph1 = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n        inline(env, morph0, context, \"link-to\", [\"Models\", \"models.hierarchy\"], {});\n        inline(env, morph1, context, \"link-to\", [\"Associations\", \"has_associations.index\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('ember-src/templates/models/edit', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createElement(\"i\");\n          dom.setAttribute(el2,\"class\",\"glyphicon glyphicon-remove-circle close pull-right\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"label\");\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"col-sm-2 control-label\");\n          var el4 = dom.createTextNode(\"Name\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"col-sm-10\");\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"label\");\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"col-sm-2 control-label\");\n          var el4 = dom.createTextNode(\"Type\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"col-sm-10\");\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [0]);\n          var element1 = dom.childAt(element0, [0]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1, 1]),0,0);\n          var morph1 = dom.createMorphAt(dom.childAt(element0, [2, 1]),0,0);\n          element(env, element0, context, \"bind-attr\", [], {\"class\": \":well :property :col-sm-6 property.isDirty:has-warning:\"});\n          element(env, element1, context, \"action\", [get(env, context, \"delete_property\"), get(env, context, \"property\")], {\"on\": \"click\"});\n          inline(env, morph0, context, \"focus-input\", [], {\"valueBinding\": \"property.name\", \"class\": \"form-control\"});\n          inline(env, morph1, context, \"view\", [\"select\"], {\"content\": get(env, context, \"property_types\"), \"valueBinding\": \"property.type\", \"class\": \"form-control\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"form-group\");\n        var el2 = dom.createElement(\"label\");\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-sm-2 control-label\");\n        var el4 = dom.createTextNode(\"Class Name\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-sm-10\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"form-group\");\n        var el2 = dom.createElement(\"label\");\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-sm-2 control-label\");\n        var el4 = dom.createTextNode(\"Inherits from\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-sm-10\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"properties row\");\n        var el2 = dom.createElement(\"h2\");\n        var el3 = dom.createTextNode(\"Properties \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"a\");\n        dom.setAttribute(el3,\"class\",\"add btn btn-default\");\n        var el4 = dom.createTextNode(\"Add Property\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"form-group\");\n        var el3 = dom.createElement(\"label\");\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-2 control-label\");\n        var el5 = dom.createTextNode(\"ID Property\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-10\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"form-group\");\n        var el2 = dom.createElement(\"button\");\n        dom.setAttribute(el2,\"class\",\"btn btn-danger pull-right\");\n        var el3 = dom.createTextNode(\"DELETE!\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"form-group\");\n        var el2 = dom.createElement(\"button\");\n        dom.setAttribute(el2,\"class\",\"btn btn-primary\");\n        var el3 = dom.createTextNode(\"Update\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, inline = hooks.inline, get = hooks.get, element = hooks.element, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element2 = dom.childAt(fragment, [2]);\n        var element3 = dom.childAt(element2, [0, 1]);\n        var element4 = dom.childAt(fragment, [3, 0]);\n        var element5 = dom.childAt(fragment, [4, 0]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 0, 1]),0,0);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [1, 0, 1]),0,0);\n        var morph2 = dom.createMorphAt(dom.childAt(element2, [1, 0, 1]),0,0);\n        var morph3 = dom.createMorphAt(element2,2,2);\n        inline(env, morph0, context, \"input\", [], {\"valueBinding\": \"model.model.class_name\", \"class\": \"form-control\"});\n        inline(env, morph1, context, \"view\", [\"select\"], {\"content\": get(env, context, \"model.models\"), \"optionValuePath\": \"content.id\", \"optionLabelPath\": \"content.class_name\", \"selectionBinding\": \"model.model.superclass_model\", \"class\": \"form-control\"});\n        element(env, element3, context, \"action\", [get(env, context, \"add_property\"), get(env, context, \"model.model\")], {\"on\": \"click\"});\n        inline(env, morph2, context, \"view\", [\"select\"], {\"content\": get(env, context, \"model.model.properties\"), \"selectionBinding\": \"model.model.id_property\", \"optionValuePath\": \"content.id\", \"optionLabelPath\": \"content.name\", \"prompt\": \"Auto\", \"class\": \"form-control\"});\n        block(env, morph3, context, \"each\", [get(env, context, \"model.model.properties\")], {\"keyword\": \"property\"}, child0, null);\n        element(env, element4, context, \"action\", [get(env, context, \"delete\"), get(env, context, \"model.model\")], {\"on\": \"click\"});\n        element(env, element5, context, \"action\", [get(env, context, \"save\"), get(env, context, \"model.model\")], {\"on\": \"click\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('ember-src/templates/models/hierarchy', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"well well-sm\");\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"Here you can create new models and edit existing models.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"To create a model, enter the model name in the box below and click the button\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"To edit a model, simply click on a model from the list\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-11\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"class\",\"btn btn-default add-model-btn col-sm-1\");\n        var el3 = dom.createTextNode(\"+\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [1]);\n        var element1 = dom.childAt(element0, [1]);\n        var morph0 = dom.createMorphAt(dom.childAt(element0, [0]),0,0);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, null);\n        inline(env, morph0, context, \"input\", [], {\"value\": get(env, context, \"new_model_name\"), \"placeholder\": \"Model Name\", \"class\": \"form-control\"});\n        element(env, element1, context, \"action\", [\"add_model\"], {\"on\": \"click\"});\n        inline(env, morph1, context, \"model-list\", [], {\"node\": get(env, context, \"model\"), \"id\": \"model-list\", \"class\": \"nested-list-group\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('ember-src/tests/helpers/resolver', ['exports', 'ember/resolver', 'ember-src/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('ember-src/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('ember-src/tests/helpers/start-app', ['exports', 'ember', 'ember-src/app', 'ember-src/router', 'ember-src/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('ember-src/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('ember-src/tests/test-helper', ['ember-src/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('ember-src/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('ember-src/tests/unit/adapters/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:application', 'ApplicationAdapter', {});\n\n  ember_qunit.test('it exists', function(assert) {\n    var adapter;\n    adapter = this.subject();\n    return assert.ok(adapter);\n  });\n\n});","define('ember-src/tests/unit/adapters/association-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:association', 'AssociationAdapter', {});\n\n  ember_qunit.test('it exists', function(assert) {\n    var adapter;\n    adapter = this.subject();\n    return assert.ok(adapter);\n  });\n\n});","define('ember-src/tests/unit/adapters/meta-model-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:meta-model', 'MetaModelAdapter', {});\n\n  ember_qunit.test('it exists', function(assert) {\n    var adapter;\n    adapter = this.subject();\n    return assert.ok(adapter);\n  });\n\n});","define('ember-src/tests/unit/adapters/model-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:model', 'ModelAdapter', {});\n\n  ember_qunit.test('it exists', function(assert) {\n    var adapter;\n    adapter = this.subject();\n    return assert.ok(adapter);\n  });\n\n});","define('ember-src/tests/unit/adapters/property-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:property', 'PropertyAdapter', {});\n\n  ember_qunit.test('it exists', function(assert) {\n    var adapter;\n    adapter = this.subject();\n    return assert.ok(adapter);\n  });\n\n});","define('ember-src/tests/unit/components/focus-input-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('focus-input', {});\n\n  ember_qunit.test('it renders', function(assert) {\n    var component;\n    assert.expect(2);\n    component = this.subject();\n    assert.equal(component._state, 'preRender');\n    this.render();\n    return assert.equal(component._state, 'inDOM');\n  });\n\n});","define('ember-src/tests/unit/components/model-list-item-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('model-list-item', {});\n\n  ember_qunit.test('it renders', function(assert) {\n    var component;\n    assert.expect(2);\n    component = this.subject();\n    assert.equal(component._state, 'preRender');\n    this.render();\n    return assert.equal(component._state, 'inDOM');\n  });\n\n});","define('ember-src/tests/unit/components/model-list-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('model-list', {});\n\n  ember_qunit.test('it renders', function(assert) {\n    var component;\n    assert.expect(2);\n    component = this.subject();\n    assert.equal(component._state, 'preRender');\n    this.render();\n    return assert.equal(component._state, 'inDOM');\n  });\n\n});","define('ember-src/tests/unit/controllers/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:application', {});\n\n  ember_qunit.test('it exists', function(assert) {\n    var controller;\n    controller = this.subject();\n    return assert.ok(controller);\n  });\n\n});","define('ember-src/tests/unit/controllers/models-edit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:models-edit', {});\n\n  ember_qunit.test('it exists', function(assert) {\n    var controller;\n    controller = this.subject();\n    return assert.ok(controller);\n  });\n\n});","define('ember-src/tests/unit/controllers/models-hierarchy-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:models-hierarchy', {});\n\n  ember_qunit.test('it exists', function(assert) {\n    var controller;\n    controller = this.subject();\n    return assert.ok(controller);\n  });\n\n});","define('ember-src/tests/unit/controllers/models-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:models', {});\n\n  ember_qunit.test('it exists', function(assert) {\n    var controller;\n    controller = this.subject();\n    return assert.ok(controller);\n  });\n\n});","define('ember-src/tests/unit/helpers/mm-path-test', ['ember-src/helpers/mm-path', 'qunit'], function (mm_path, qunit) {\n\n  'use strict';\n\n  qunit.module('MmPathHelper');\n\n  qunit.test('it works', function(assert) {\n    var result;\n    result = mm_path.mmPath(42);\n    return assert.ok(result);\n  });\n\n});","define('ember-src/tests/unit/models/has-association-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('has-association', {\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model;\n    model = this.subject();\n    return assert.ok(!!model);\n  });\n\n});","define('ember-src/tests/unit/models/model-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('model', {\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model;\n    model = this.subject();\n    return assert.ok(!!model);\n  });\n\n});","define('ember-src/tests/unit/models/property-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('property', {\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model;\n    model = this.subject();\n    return assert.ok(!!model);\n  });\n\n});","define('ember-src/tests/unit/routes/has-association-index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:has-association-index', {});\n\n  ember_qunit.test('it exists', function(assert) {\n    var route;\n    route = this.subject();\n    return assert.ok(route);\n  });\n\n});","define('ember-src/tests/unit/routes/has-associations-new-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:has-associations-new', {});\n\n  ember_qunit.test('it exists', function(assert) {\n    var route;\n    route = this.subject();\n    return assert.ok(route);\n  });\n\n});","define('ember-src/tests/unit/routes/models-edit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:models-edit', {});\n\n  ember_qunit.test('it exists', function(assert) {\n    var route;\n    route = this.subject();\n    return assert.ok(route);\n  });\n\n});","define('ember-src/tests/unit/routes/models-hierarchy-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:models-hierarchy', {});\n\n  ember_qunit.test('it exists', function(assert) {\n    var route;\n    route = this.subject();\n    return assert.ok(route);\n  });\n\n});","define('ember-src/tests/unit/serializers/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('serializer:application', {});\n\n  ember_qunit.test('it exists', function(assert) {\n    var serializer;\n    serializer = this.subject();\n    return assert.ok(serializer);\n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('ember-src/config/environment', ['ember'], function(Ember) {\n  return { 'default': {\"modulePrefix\":\"ember-src\",\"environment\":\"development\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"name\":\"ember-src\",\"version\":\"0.0.0.cfccf0ee\"},\"contentSecurityPolicyHeader\":\"Content-Security-Policy-Report-Only\",\"contentSecurityPolicy\":{\"default-src\":\"'none'\",\"script-src\":\"'self' 'unsafe-eval'\",\"font-src\":\"'self'\",\"connect-src\":\"'self'\",\"img-src\":\"'self'\",\"style-src\":\"'self'\",\"media-src\":\"'self'\"},\"exportApplicationGlobal\":true}};\n});\n\nif (runningTests) {\n  require(\"ember-src/tests/test-helper\");\n} else {\n  require(\"ember-src/app\")[\"default\"].create({\"name\":\"ember-src\",\"version\":\"0.0.0.cfccf0ee\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACphGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzlYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzzrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"ember-src.js"}